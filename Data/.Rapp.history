library(geosphere)#
library(fields)#
library(MASS)#
library(raster)#
library(move)#
library(vioplot)#
library(igraph)
setwd("/Users/mariussomveille/Desktop/PhD/Chapter 3 â€“ niche/Submission process/Ecography/analysis-migration-strategies/Data")
PresAbs_BR_NH <- read.table("PresAbs_BR_NH.txt", header=T)  # Breeding range of species breeding during the northern summer#
PresAbs_NB_NH <- read.table("PresAbs_NB_NH.txt", header=T)  # Non-breeding range of species breeding during the northern summer#
PresAbs_BR_SH <- read.table("PresAbs_BR_SH.txt", header=T)  # Breeding range of species breeding during the northern winter#
PresAbs_NB_SH <- read.table("PresAbs_NB_SH.txt", header=T)  # Non-breeding range of species breeding during the northern winter#
#
#Remove species that do not have at least 50% of either their breeding or non-breeding range on land#
sppinfo <- read.csv("List_species_both&coastal.csv", sep=";", header=T)#
PresAbs_BR_NH <- PresAbs_BR_NH[,-match(c(as.character(sppinfo$CoastalBothBoth),as.character(sppinfo$CoastalNHEH),as.character(sppinfo$CoastalNHWH),as.character(sppinfo$CoastalBothEH)), colnames(PresAbs_BR_NH), nomatch=0)]#
PresAbs_NB_NH <- PresAbs_NB_NH[,-match(c(as.character(sppinfo$CoastalBothBoth),as.character(sppinfo$CoastalNHEH),as.character(sppinfo$CoastalNHWH),as.character(sppinfo$CoastalBothEH)), colnames(PresAbs_NB_NH), nomatch=0)]#
PresAbs_BR_SH <- PresAbs_BR_SH[,-match(c(as.character(sppinfo$CoastalSHEH),as.character(sppinfo$CoastalSHWH)), colnames(PresAbs_BR_SH), nomatch=0)]#
PresAbs_NB_SH <- PresAbs_NB_SH[,-match(c(as.character(sppinfo$CoastalSHEH),as.character(sppinfo$CoastalSHWH)), colnames(PresAbs_NB_SH), nomatch=0)]#
#Environmental data#
envData <- read.csv("Env_data.csv")#
envData2 <- envData[-which(envData$Tmean_NW==0 & envData$Tmean_NS==0),]#
PrecNS <- log(envData2$Prec_NS+1)#
PrecNW <- log(envData2$Prec_NW+1)#
TempNS <- envData2$Tmean_NS/10#
TempNW <- envData2$Tmean_NW/10#
NDVI_NS <- ((envData2$NDVI_may + envData2$NDVI_jun + envData2$NDVI_jul + envData2$NDVI_aug)/4) * 100#
NDVI_NW <- ((envData2$NDVI_nov + envData2$NDVI_dec + envData2$NDVI_jan + envData2$NDVI_feb)/4) * 100#
NDVI_NS[NDVI_NS<1] <- 1#
NDVI_NW[NDVI_NW<1] <- 1#
#z-tranform climate data to make axes comparable#
sdTemp <- sd(c(TempNS,TempNW))#
mnTemp <- mean(c(TempNS,TempNW))#
sdPrec <- sd(c(PrecNS,PrecNW))#
mnPrec <- mean(c(PrecNS,PrecNW))#
TempNS <- (TempNS - mnTemp) / sdTemp#
TempNW <- (TempNW - mnTemp) / sdTemp#
PrecNS <- (PrecNS - mnPrec) / sdPrec#
PrecNW <- (PrecNW - mnPrec) / sdPrec#
#Split environmental data into western hemisphere (WH) and eastern hemisphere (EH)#
TempNS_WH <- TempNS[which(envData2$LONGITUDE<=-30)]#
TempNW_WH <- TempNW[which(envData2$LONGITUDE<=-30)]#
PrecNS_WH <- PrecNS[which(envData2$LONGITUDE<=-30)]#
PrecNW_WH <- PrecNW[which(envData2$LONGITUDE<=-30)]#
NDVI_NS_WH <- NDVI_NS[which(envData2$LONGITUDE<=-30)]#
NDVI_NW_WH <- NDVI_NW[which(envData2$LONGITUDE<=-30)]#
resourceGain_NS_WH <- NDVI_NS_WH - NDVI_NW_WH#
resourceGain_NW_WH <- NDVI_NW_WH - NDVI_NS_WH#
resourceScarcity_NS_WH <- -resourceGain_NS_WH#
resourceScarcity_NW_WH <- -resourceGain_NW_WH#
TempNS_EH <- TempNS[which(envData2$LONGITUDE>-30)]#
TempNW_EH <- TempNW[which(envData2$LONGITUDE>-30)]#
PrecNS_EH <- PrecNS[which(envData2$LONGITUDE>-30)]#
PrecNW_EH <- PrecNW[which(envData2$LONGITUDE>-30)]#
NDVI_NS_EH <- NDVI_NS[which(envData2$LONGITUDE>-30)]#
NDVI_NW_EH <- NDVI_NW[which(envData2$LONGITUDE>-30)]#
resourceGain_NS_EH <- NDVI_NS_EH - NDVI_NW_EH#
resourceGain_NW_EH <- NDVI_NW_EH - NDVI_NS_EH#
resourceScarcity_NS_EH <- -resourceGain_NS_EH#
resourceScarcity_NW_EH <- -resourceGain_NW_EH#
#Geographic coordinates#
lonlat <- cbind(envData2$LONGITUDE, envData2$LATITUDE)#
colnames(lonlat) <- c("LONGITUDE", "LATITUDE")#
west_Hem <- lonlat[which(lonlat[,1]<=-30),]  # subset for Western Hemisphere#
east_Hem <- lonlat[which(lonlat[,1]>-30),]   # subset for Eastern Hemisphere#
#Clean presence-absence data#
PresAbs_BR_NH <- PresAbs_BR_NH[-which(envData$Tmean_NW==0 & envData$Tmean_NS==0),]#
PresAbs_NB_NH <- PresAbs_NB_NH[-which(envData$Tmean_NW==0 & envData$Tmean_NS==0),]#
PresAbs_BR_SH <- PresAbs_BR_SH[-which(envData$Tmean_NW==0 & envData$Tmean_NS==0),]#
PresAbs_NB_SH <- PresAbs_NB_SH[-which(envData$Tmean_NW==0 & envData$Tmean_NS==0),]#
#
PresAbs_BR_NH_EH <- PresAbs_BR_NH[match(envData2[which(envData2$LONGITUDE>-30),1], PresAbs_BR_NH[,1]),]#
PresAbs_NB_NH_EH <- PresAbs_NB_NH[match(envData2[which(envData2$LONGITUDE>-30),1], PresAbs_NB_NH[,1]),]#
PresAbs_BR_NH_WH <- PresAbs_BR_NH[match(envData2[which(envData2$LONGITUDE<=-30),1], PresAbs_BR_NH[,1]),]#
PresAbs_NB_NH_WH <- PresAbs_NB_NH[match(envData2[which(envData2$LONGITUDE<=-30),1], PresAbs_NB_NH[,1]),]#
#
PresAbs_BR_SH_EH <- PresAbs_BR_SH[match(envData2[which(envData2$LONGITUDE>-30),1], PresAbs_BR_SH[,1]),]#
PresAbs_NB_SH_EH <- PresAbs_NB_SH[match(envData2[which(envData2$LONGITUDE>-30),1], PresAbs_NB_SH[,1]),]#
PresAbs_BR_SH_WH <- PresAbs_BR_SH[match(envData2[which(envData2$LONGITUDE<=-30),1], PresAbs_BR_SH[,1]),]#
PresAbs_NB_SH_WH <- PresAbs_NB_SH[match(envData2[which(envData2$LONGITUDE<=-30),1], PresAbs_NB_SH[,1]),]#
#Computing range size#
rangeSize_migra_BR_NH_WH <- apply(PresAbs_BR_NH_WH[,-1], 2, sum)#
rangeSize_migra_BR_SH_WH <- apply(PresAbs_BR_SH_WH[,-1], 2, sum)#
rangeSize_migra_NB_NH_WH <- apply(PresAbs_NB_NH_WH[,-1], 2, sum)#
rangeSize_migra_NB_SH_WH <- apply(PresAbs_NB_SH_WH[,-1], 2, sum)#
rangeSize_migra_BR_NH_EH <- apply(PresAbs_BR_NH_EH[,-1], 2, sum)#
rangeSize_migra_BR_SH_EH <- apply(PresAbs_BR_SH_EH[,-1], 2, sum)#
rangeSize_migra_NB_NH_EH <- apply(PresAbs_NB_NH_EH[,-1], 2, sum)#
rangeSize_migra_NB_SH_EH <- apply(PresAbs_NB_SH_EH[,-1], 2, sum)#
rangeSizes_WH <- c(rangeSize_migra_BR_NH_WH, rangeSize_migra_BR_SH_WH, rangeSize_migra_NB_NH_WH, rangeSize_migra_NB_SH_WH)#
rangeSizes_EH <- c(rangeSize_migra_BR_NH_EH, rangeSize_migra_BR_SH_EH, rangeSize_migra_NB_NH_EH, rangeSize_migra_NB_SH_EH)#
#Computing range overlap#
perm_NH_WH <- PresAbs_BR_NH_WH * PresAbs_NB_NH_WH#
perm_NH_WH <- apply(perm_NH_WH[,-1], 2, sum)#
rangeOverlap_NH_WH <- perm_NH_WH / (rangeSize_migra_BR_NH_WH + rangeSize_migra_NB_NH_WH - perm_NH_WH)#
rangeOverlap_NH_WH  <- rangeOverlap_NH_WH[-which(rangeOverlap_NH_WH == "NaN")]#
perm_SH_WH <- PresAbs_BR_SH_WH * PresAbs_NB_SH_WH#
perm_SH_WH <- apply(perm_SH_WH[,-1], 2, sum)#
rangeOverlap_SH_WH <- perm_SH_WH / (rangeSize_migra_BR_SH_WH + rangeSize_migra_NB_SH_WH - perm_SH_WH)#
rangeOverlap_SH_WH  <- rangeOverlap_SH_WH[-which(rangeOverlap_SH_WH == "NaN")]#
#
perm_NH_EH <- PresAbs_BR_NH_EH * PresAbs_NB_NH_EH#
perm_NH_EH <- apply(perm_NH_EH[,-1], 2, sum)#
rangeOverlap_NH_EH <- perm_NH_EH / (rangeSize_migra_BR_NH_EH + rangeSize_migra_NB_NH_EH - perm_NH_EH)#
rangeOverlap_NH_EH  <- rangeOverlap_NH_EH[-which(rangeOverlap_NH_EH == "NaN")]#
perm_SH_EH <- PresAbs_BR_SH_EH * PresAbs_NB_SH_EH#
perm_SH_EH <- apply(perm_SH_EH[,-1], 2, sum)#
rangeOverlap_SH_EH <- perm_SH_EH / (rangeSize_migra_BR_SH_EH + rangeSize_migra_NB_SH_EH - perm_SH_EH)#
rangeOverlap_SH_EH  <- rangeOverlap_SH_EH[-which(rangeOverlap_SH_EH == "NaN")]#
#Select migratory species with less than 20% overlap between their breeding and non-breeding ranges#
selectedSpeciesNH_EH <- which(rangeOverlap_NH_EH < 0.2)#
selectedSpeciesSH_EH <- which(rangeOverlap_SH_EH < 0.2)#
selectedSpeciesNH_WH <- which(rangeOverlap_NH_WH < 0.2)#
selectedSpeciesSH_WH <- which(rangeOverlap_SH_WH < 0.2)#
#
#correct mistakes in coding seasons#
#Anthus hoeschi#
selectedSpeciesSH_EH <-  c(selectedSpeciesSH_EH, selectedSpeciesNH_EH[29])#
selectedSpeciesNH_EH <- selectedSpeciesNH_EH[-29]#
#Gallinago.nigripennis#
selectedSpeciesNH_EH <- selectedSpeciesNH_EH[-159]#
#Pitta.moluccensis and Sylvia.cantillans #
selectedSpeciesNH_EH <-  c(selectedSpeciesNH_EH, selectedSpeciesSH_EH[c(12,13)])#
selectedSpeciesSH_EH <- selectedSpeciesSH_EH[-c(12,13)]#
#Keep the presence-absence data only of selected species #
PresAbs_BR_NH_WH2 <- PresAbs_BR_NH_WH[,match(names(selectedSpeciesNH_WH), colnames(PresAbs_BR_NH_WH))]#
PresAbs_NB_NH_WH2 <- PresAbs_NB_NH_WH[,match(names(selectedSpeciesNH_WH), colnames(PresAbs_NB_NH_WH))]#
PresAbs_BR_NH_EH2 <- PresAbs_BR_NH_EH[,match(names(selectedSpeciesNH_EH)[1:380], colnames(PresAbs_BR_NH_EH))]#
PresAbs_NB_NH_EH2 <- PresAbs_NB_NH_EH[,match(names(selectedSpeciesNH_EH)[1:380], colnames(PresAbs_NB_NH_EH))]#
PresAbs_BR_NH_EH2 <- cbind(PresAbs_BR_NH_EH2, PresAbs_BR_SH_EH[,match(names(selectedSpeciesNH_EH)[381:382], colnames(PresAbs_BR_SH_EH))])#
PresAbs_NB_NH_EH2 <- cbind(PresAbs_NB_NH_EH2, PresAbs_NB_SH_EH[,match(names(selectedSpeciesNH_EH)[381:382], colnames(PresAbs_NB_SH_EH))])#
PresAbs_BR_SH_WH2 <- PresAbs_BR_SH_WH[,match(names(selectedSpeciesSH_WH), colnames(PresAbs_BR_SH_WH))]#
PresAbs_NB_SH_WH2 <- PresAbs_NB_SH_WH[,match(names(selectedSpeciesSH_WH), colnames(PresAbs_NB_SH_WH))]#
PresAbs_BR_SH_EH2 <- PresAbs_BR_SH_EH[,match(names(selectedSpeciesSH_EH)[1:11], colnames(PresAbs_BR_SH_EH))]#
PresAbs_NB_SH_EH2 <- PresAbs_NB_SH_EH[,match(names(selectedSpeciesSH_EH)[1:11], colnames(PresAbs_NB_SH_EH))]#
PresAbs_BR_SH_EH2 <- cbind(PresAbs_BR_SH_EH2, PresAbs_BR_NH_EH[,match(names(selectedSpeciesSH_EH)[12], colnames(PresAbs_BR_NH_EH))])#
PresAbs_NB_SH_EH2 <- cbind(PresAbs_NB_SH_EH2, PresAbs_NB_NH_EH[,match(names(selectedSpeciesSH_EH)[12], colnames(PresAbs_NB_NH_EH))])#
#
#Remove species with 0 presences (or only 1 because it creates problems for the kernel estimation) for at least one season#
toremove_NH_WH <- which(apply(PresAbs_BR_NH_WH2, 2, sum)<=1 | apply(PresAbs_NB_NH_WH2, 2, sum)<=1)#
if(length(toremove_NH_WH) > 0){#
	PresAbs_BR_NH_WH2 <- PresAbs_BR_NH_WH2[,-toremove_NH_WH]#
	PresAbs_NB_NH_WH2 <- PresAbs_NB_NH_WH2[,-toremove_NH_WH]#
}#
toremove_SH_WH <- which(apply(PresAbs_BR_SH_WH2, 2, sum)<=1 | apply(PresAbs_NB_SH_WH2, 2, sum)<=1)#
if(length(toremove_SH_WH) > 0){#
	PresAbs_BR_SH_WH2 <- PresAbs_BR_SH_WH2[,-toremove_SH_WH]#
	PresAbs_NB_SH_WH2 <- PresAbs_NB_SH_WH2[,-toremove_SH_WH]#
}#
toremove_NH_EH <- which(apply(PresAbs_BR_NH_EH2, 2, sum)<=1 | apply(PresAbs_NB_NH_EH2, 2, sum)<=1)#
if(length(toremove_NH_EH) > 0){#
	PresAbs_BR_NH_EH2 <- PresAbs_BR_NH_EH2[,-toremove_NH_EH]#
	PresAbs_NB_NH_EH2 <- PresAbs_NB_NH_EH2[,-toremove_NH_EH]#
}#
toremove_SH_EH <- which(apply(PresAbs_BR_SH_EH2, 2, sum)<=1 | apply(PresAbs_NB_SH_EH2, 2, sum)<=1)#
if(length(toremove_SH_EH) > 0){#
	PresAbs_BR_SH_EH2 <- PresAbs_BR_SH_EH2[,-toremove_SH_EH]#
	PresAbs_NB_SH_EH2 <- PresAbs_NB_SH_EH2[,-toremove_SH_EH]#
}
nicheDensityRaster <- function(seasonalNiche){#
	niche.kernel <- kde2d(seasonalNiche[,1], seasonalNiche[,2], n=20, h=1, lims=c(-3.7,1.5, -2.7,2.5)) #
	niche.kernel$z = niche.kernel$z/sum(niche.kernel$z)#
	niche.raster <- raster(niche.kernel)#
	threshold99=0; i=0#
	while(threshold99 <= 0.99){#
		i=i+1#
		threshold99 = threshold99 + sort(as.vector(niche.raster), decreasing=T)[i]#
	}#
	niche.raster[which(as.vector(niche.raster) < sort(as.vector(niche.raster), decreasing=T)[i])] = 0#
	niche.raster = niche.raster / sum(as.vector(niche.raster))	#
	return(niche.raster)#
}#
#
#Compute niche distances (using the earth mover's distance) for every migratory species#
breeding.nichesNH_WH <- apply(PresAbs_BR_NH_WH2, 2, function(x) nicheDensityRaster(cbind(TempNS_WH[which(x==1)], PrecNS_WH[which(x==1)])))#
nonbreeding.nichesNH_WH <- apply(PresAbs_NB_NH_WH2, 2, function(x) nicheDensityRaster(cbind(TempNW_WH[which(x==1)], PrecNW_WH[which(x==1)])))#
breeding.nichesSH_WH <- apply(PresAbs_BR_SH_WH2, 2, function(x) nicheDensityRaster(cbind(TempNW_WH[which(x==1)], PrecNW_WH[which(x==1)])))#
nonbreeding.nichesSH_WH <- apply(PresAbs_NB_SH_WH2, 2, function(x) nicheDensityRaster(cbind(TempNS_WH[which(x==1)], PrecNS_WH[which(x==1)])))#
breeding.nichesNH_EH <- apply(PresAbs_BR_NH_EH2, 2, function(x) nicheDensityRaster(cbind(TempNS_EH[which(x==1)], PrecNS_EH[which(x==1)])))#
nonbreeding.nichesNH_EH <- apply(PresAbs_NB_NH_EH2, 2, function(x) nicheDensityRaster(cbind(TempNW_EH[which(x==1)], PrecNW_EH[which(x==1)])))#
breeding.nichesSH_EH <- apply(PresAbs_BR_SH_EH2, 2, function(x) nicheDensityRaster(cbind(TempNW_EH[which(x==1)], PrecNW_EH[which(x==1)])))#
nonbreeding.nichesSH_EH <- apply(PresAbs_NB_SH_EH2, 2, function(x) nicheDensityRaster(cbind(TempNS_EH[which(x==1)], PrecNS_EH[which(x==1)])))#
#
niche.distancesNH_WH <- mapply(function(X,Y){ emd(X,Y) }, X=breeding.nichesNH_WH, Y=nonbreeding.nichesNH_WH)#
niche.distancesSH_WH <- mapply(function(X,Y){ emd(X,Y) }, X=breeding.nichesSH_WH, Y=nonbreeding.nichesSH_WH)#
niche.distancesNH_EH <- mapply(function(X,Y){ emd(X,Y) }, X=breeding.nichesNH_EH, Y=nonbreeding.nichesNH_EH)#
niche.distancesSH_EH <- mapply(function(X,Y){ emd(X,Y) }, X=breeding.nichesSH_EH, Y=nonbreeding.nichesSH_EH)#
niche.distances.obs = c(niche.distancesNH_WH, niche.distancesNH_EH, niche.distancesSH_WH, niche.distancesSH_EH)#
#Computing geographical (migration) distance for every migratory species#
centroids.breeding.groundsNH_WH <- t(apply(PresAbs_BR_NH_WH2, 2, function(x) apply(west_Hem[which(x==1),], 2, mean)))#
centroids.nonbreeding.groundsNH_WH <- t(apply(PresAbs_NB_NH_WH2, 2, function(x) apply(west_Hem[which(x==1),], 2, mean)))#
centroids.breeding.groundsSH_WH <- t(apply(PresAbs_BR_SH_WH2, 2, function(x) apply(west_Hem[which(x==1),], 2, mean)))#
centroids.nonbreeding.groundsSH_WH <- t(apply(PresAbs_NB_SH_WH2, 2, function(x) apply(west_Hem[which(x==1),], 2, mean)))#
centroids.breeding.groundsNH_EH <- t(apply(PresAbs_BR_NH_EH2, 2, function(x) apply(east_Hem[which(x==1),], 2, mean)))#
centroids.nonbreeding.groundsNH_EH <- t(apply(PresAbs_NB_NH_EH2, 2, function(x) apply(east_Hem[which(x==1),], 2, mean)))#
centroids.breeding.groundsSH_EH <- t(apply(PresAbs_BR_SH_EH2, 2, function(x) apply(east_Hem[which(x==1),], 2, mean)))#
centroids.nonbreeding.groundsSH_EH <- t(apply(PresAbs_NB_SH_EH2, 2, function(x) apply(east_Hem[which(x==1),], 2, mean)))#
#
geo.distancesNH_WH <- rdist.earth.vec(centroids.breeding.groundsNH_WH, centroids.nonbreeding.groundsNH_WH, miles=F)#
geo.distancesSH_WH <- rdist.earth.vec(centroids.breeding.groundsSH_WH, centroids.nonbreeding.groundsSH_WH, miles=F)#
geo.distancesNH_EH <- rdist.earth.vec(centroids.breeding.groundsNH_EH, centroids.nonbreeding.groundsNH_EH, miles=F)#
geo.distancesSH_EH <- rdist.earth.vec(centroids.breeding.groundsSH_EH, centroids.nonbreeding.groundsSH_EH, miles=F)#
geo.distances.obs <- c(geo.distancesNH_WH, geo.distancesNH_EH, geo.distancesSH_WH, geo.distancesSH_EH)#
#Computing resource scarcity for every migratory species#
breeding.resource.scarcityNH_WH <- apply(PresAbs_BR_NH_WH2, 2, function(x) mean(resourceScarcity_NS_WH[which(x==1)]))#
nonbreeding.resource.scarcityNH_WH <- apply(PresAbs_NB_NH_WH2, 2, function(x) mean(resourceScarcity_NW_WH[which(x==1)]))#
resource.scarcityNH_WH <- breeding.resource.scarcityNH_WH + nonbreeding.resource.scarcityNH_WH#
breeding.resource.scarcitySH_WH <- apply(PresAbs_BR_SH_WH2, 2, function(x) mean(resourceScarcity_NW_WH[which(x==1)]))#
nonbreeding.resource.scarcitySH_WH <- apply(PresAbs_NB_SH_WH2, 2, function(x) mean(resourceScarcity_NS_WH[which(x==1)]))#
resource.scarcitySH_WH <- breeding.resource.scarcitySH_WH + nonbreeding.resource.scarcitySH_WH#
breeding.resource.scarcityNH_EH <- apply(PresAbs_BR_NH_EH2, 2, function(x) mean(resourceScarcity_NS_EH[which(x==1)]))#
nonbreeding.resource.scarcityNH_EH <- apply(PresAbs_NB_NH_EH2, 2, function(x) mean(resourceScarcity_NW_EH[which(x==1)]))#
resource.scarcityNH_EH <- breeding.resource.scarcityNH_EH + nonbreeding.resource.scarcityNH_EH#
breeding.resource.scarcitySH_EH <- apply(PresAbs_BR_SH_EH2, 2, function(x) mean(resourceScarcity_NW_EH[which(x==1)]))#
nonbreeding.resource.scarcitySH_EH <- apply(PresAbs_NB_SH_EH2, 2, function(x) mean(resourceScarcity_NS_EH[which(x==1)]))#
resource.scarcitySH_EH <- breeding.resource.scarcitySH_EH + nonbreeding.resource.scarcitySH_EH#
resource.scarcity.obs <- c(resource.scarcityNH_WH, resource.scarcityNH_EH, resource.scarcitySH_WH, resource.scarcitySH_EH)#
### Figure 3 - trade-off ### #
#
par(mfrow=c(2,2), mar=c(2.5,3,1.5,3), mgp=c(1.5,0.5,0))#
# Relationship between geographical distance and niche distance#
plot(sqrt(geo.distances.obs), niche.distances.obs, xlim=c(0,120), ylim=c(0,3.1), xlab="Geographical distance (square-root)", ylab="Niche distance", main="", xaxt="n", axes=F, pch=20, cex=0.7)#
axis(side=2)#
axis(side=1)#
mod = lm(niche.distances.obs ~ sqrt(geo.distances.obs) + I(sqrt(geo.distances.obs)^2))#
lines(sort(sqrt(geo.distances.obs)), fitted(mod)[order(sqrt(geo.distances.obs))], type="l", col="red")#
mtext("A", cex=1.3, side=3, line=0, at=-22)#
mtext(bquote(R^2 == .(round(summary(mod)$r.squared,2))), cex=1, side=3, line=-1.6, at=30)#
# Relationship between niche distance and resource scarcity#
plot(niche.distances.obs, resource.scarcity.obs, xlim=c(0,3.1), ylim=c(-63,21), xlab="Niche distance", ylab="Resource scarcity", main="", xaxt="n", axes=F, pch=20, cex=0.7)#
axis(side=2)#
axis(side=1)#
mod = lm(resource.scarcity.obs ~ niche.distances.obs + I(niche.distances.obs^2))#
lines(sort(niche.distances.obs), fitted(mod)[order(niche.distances.obs)], type="l", col="red")#
mtext("B", cex=1.3, side=3, line=0, at=-0.55)#
mtext(bquote(R^2 == .(round(summary(mod)$r.squared,2))), cex=1, side=3, line=-6, at=2.6)#
# Relationship between geographical distance and resource scarcity#
plot(sqrt(geo.distances.obs), resource.scarcity.obs, xlim=c(0,120), ylim=c(-63,21), xlab="Geographical distance (square-root)", ylab="Resource scarcity", main="", xaxt="n", axes=F, pch=20, cex=0.7)#
axis(side=2)#
axis(side=1)#
mod = lm(resource.scarcity.obs ~ sqrt(geo.distances.obs) + I(sqrt(geo.distances.obs)^2))#
lines(sort(sqrt(geo.distances.obs)), fitted(mod)[order(sqrt(geo.distances.obs))], type="l", col="red")#
mtext("C", cex=1.3, side=3, line=0, at=-22)#
mtext(bquote(R^2 == .(round(summary(mod)$r.squared,2))), cex=1, side=3, line=-1.5, at=90)#
# Relationship between the three factors#
hist(sqrt(geo.distances.obs), xlim=c(0,120), xlab="", ylab="", main="", xaxt="n", axes=F, col="light grey", border="grey")#
axis(side=4)#
axis(side=1)#
par(new=T, mar=c(2.5,3,1.5,3), mgp=c(1.5,0.5,0))#
plot(sqrt(geo.distances.obs), resource.scarcity.obs, xlim=c(0,120), ylim=c(-63,21), xlab="Geographical distance (square-root)", ylab="Resource scarcity", main="", xaxt="n", axes=F, pch=20, cex=0.7, col="yellow")#
axis(side=2)#
points(sqrt(geo.distances.obs)[which(niche.distances.obs < quantile(niche.distances.obs)[4])], resource.scarcity.obs[which(niche.distances.obs < quantile(niche.distances.obs)[4])], col="orange", cex=0.7, pch=20)#
points(sqrt(geo.distances.obs)[which(niche.distances.obs < quantile(niche.distances.obs)[3])], resource.scarcity.obs[which(niche.distances.obs < quantile(niche.distances.obs)[3])], col="red", cex=0.7, pch=20)#
points(sqrt(geo.distances.obs)[which(niche.distances.obs < quantile(niche.distances.obs)[2])], resource.scarcity.obs[which(niche.distances.obs < quantile(niche.distances.obs)[2])], col="brown4", cex=0.7, pch=20)#
mtext("D", cex=1.3, side=3, line=0, at=-22)#
mtext("Number of species", side=4, line=1.4, cex=0.85,las=0)#
legend("topright", inset=.005, bg="white", box.col="white", title="Niche distance", c(paste("<", round(quantile(niche.distances.obs)[2], 2), sep=" "), paste(round(quantile(niche.distances.obs)[2], 2), round(quantile(niche.distances.obs)[3], 2), sep="â€“"), paste(round(quantile(niche.distances.obs)[3], 2), round(quantile(niche.distances.obs)[4], 2), sep="â€“"), paste(">", round(quantile(niche.distances.obs)[4], 2), sep=" ")), fill=c("brown4", "red", "orange", "yellow"), cex=0.8)
minNDVI <- min(NDVI_NS, NDVI_NW)
length(minNDVI)
minNDVI <- pmin(NDVI_NS, NDVI_NW)
length(minNDVI)
head(minNDVI)
PresAbs_residents <- read.table("PresAbs_res.txt", header=T)
PresAbs_residents <- read.table("PresAbs_res.txt", header=T)
dim(PresAbs_residents)
richness.residents <- apply(PresAbs_residents, 1, sum)
length(richness.residents)
PresAbs_residents <- PresAbs_residents[-which(envData$Tmean_NW==0 & envData$Tmean_NS==0),]
dim(PresAbs_residents)
richness.residents <- apply(PresAbs_residents, 1, sum)
summary(lm(richness.residents ~ minNDVI))
summary(lm(minNDVI ~ richness.residents))
plot(lonlat[,2], richness.residents)
PresAbs_residents[1:5,1:5]
PresAbs_NB_SH[1:5,1:5]
richness.residents <- apply(PresAbs_residents[,-1], 1, sum)
summary(lm(richness.residents ~ minNDVI))
plot(lonlat[,2], richness.residents)
plot(lonlat[,2], minNDVI)
plot(minNDVI, richness.residents)
plot(lonlat[,2], minNDVI)
plot(lonlat[,2], NDVI_NW)
plot(lonlat[,2], minNDVI)
plot(lonlat[,2], NDVI_NW)
plot(lonlat[,2], NDVI_NW)
plot(lonlat[,2], minNDVI)
summary(lm(richness.residents ~ minNDVI-1))
?lm
breeding.resource.scarcity.residentinNB.NH_WH <- apply(PresAbs_NB_NH_WH2, 2, function(x) mean(resourceScarcity_NS_WH[which(x==1)]))#
nonbreeding.resource.scarcity.residentinBR.NH_WH <- apply(PresAbs_BR_NH_WH2, 2, function(x) mean(resourceScarcity_NW_WH[which(x==1)]))#
resource.scarcity.residentinNB.NH_WH <- breeding.resource.scarcity.residentinNB.NH_WH + nonbreeding.resource.scarcityNH_WH#
resource.scarcity.residentinBR.NH_WH <- breeding.resource.scarcityNH_WH + nonbreeding.resource.scarcity.residentinBR.NH_WH#
breeding.resource.scarcity.residentinNB.SH_WH <- apply(PresAbs_NB_SH_WH2, 2, function(x) mean(resourceScarcity_NW_WH[which(x==1)]))#
nonbreeding.resource.scarcity.residentinBR.SH_WH <- apply(PresAbs_BR_SH_WH2, 2, function(x) mean(resourceScarcity_NS_WH[which(x==1)]))#
resource.scarcity.residentinNB.SH_WH <- breeding.resource.scarcity.residentinNB.SH_WH + nonbreeding.resource.scarcitySH_WH#
resource.scarcity.residentinBR.SH_WH <- breeding.resource.scarcitySH_WH + nonbreeding.resource.scarcity.residentinBR.SH_WH#
breeding.resource.scarcity.residentinNB.NH_EH <- apply(PresAbs_NB_NH_EH2, 2, function(x) mean(resourceScarcity_NS_EH[which(x==1)]))#
nonbreeding.resource.scarcity.residentinBR.NH_EH <- apply(PresAbs_BR_NH_EH2, 2, function(x) mean(resourceScarcity_NW_EH[which(x==1)]))#
resource.scarcity.residentinNB.NH_EH <- breeding.resource.scarcity.residentinNB.NH_EH + nonbreeding.resource.scarcityNH_EH#
resource.scarcity.residentinBR.NH_EH <- breeding.resource.scarcityNH_EH + nonbreeding.resource.scarcity.residentinBR.NH_EH#
breeding.resource.scarcity.residentinNB.SH_EH <- apply(PresAbs_NB_SH_EH2, 2, function(x) mean(resourceScarcity_NW_EH[which(x==1)]))#
nonbreeding.resource.scarcity.residentinBR.SH_EH <- apply(PresAbs_BR_SH_EH2, 2, function(x) mean(resourceScarcity_NS_EH[which(x==1)]))#
resource.scarcity.residentinNB.SH_EH <- breeding.resource.scarcity.residentinNB.SH_EH + nonbreeding.resource.scarcitySH_EH#
resource.scarcity.residentinBR.SH_EH <- breeding.resource.scarcitySH_EH + nonbreeding.resource.scarcity.residentinBR.SH_EH
resource.scarcity.residentinNB <- c(resource.scarcity.residentinNB.NH_WH, resource.scarcity.residentinNB.NH_EH, resource.scarcity.residentinNB.SH_WH, resource.scarcity.residentinNB.SH_EH)#
resource.scarcity.residentinBR <- c(resource.scarcity.residentinBR.NH_WH, resource.scarcity.residentinBR.NH_EH, resource.scarcity.residentinBR.SH_WH, resource.scarcity.residentinBR.SH_EH)
resource.scarcity.residentinNB
hist(resource.scarcity.residentinNB)
hist(resource.scarcity.residentinBR)
t.test(resource.scarcity.obs, resource.scarcity.residentinNB, "less")#
t.test(resource.scarcity.obs, resource.scarcity.residentinBR, "less")
